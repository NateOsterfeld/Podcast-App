{"ast":null,"code":"var _jsxFileName = \"C:\\\\PodcastApp\\\\podcastapp-SPA\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Popular from './components/Popular/Popular';\nimport Navigation from './components/Navigation/Navigation';\nimport Discover from './components/Discover/Discover';\nimport Menu from './components/Menu/Menu'; // idea to add state inside popular component to save/cache podcasts once they've been loaded there\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getPopular = () => {\n      fetch('http://localhost:3000/popular').then(response1 => response1.json()).then(response2 => this.setState({\n        popular: response2\n      }));\n    };\n\n    this.getGenre = id => {\n      //if using req.params.id doesn't work, send it in body\n      console.log('is it being passed', id);\n      fetch(\"http://localhost:3000/genres/\".concat(id), {\n        method: 'post',\n        body: {\n          id: id\n        }\n      }); // .then(response => response.json())\n      // .then(response => {\n      //   console.log('genreresponse', response);\n      // })\n    };\n\n    this.getMenuItems = () => {\n      fetch('http://localhost:3000/genres').then(response => response.json()).then(response => {\n        this.setState({\n          genres: response\n        });\n        console.log('genres', this.state.genres);\n      });\n    };\n\n    this.changeRoute = route => {\n      if (route === 'popular') {\n        this.setState({\n          route: 'popular'\n        });\n        this.getPopular();\n        console.log('wut', this.state.route);\n      } else if (route === 'discover') {\n        this.setState({\n          route: 'discover'\n        });\n        console.log('discovery');\n      }\n    };\n\n    this.state = {\n      popular: [],\n      route: 'discover',\n      genres: []\n    };\n  }\n\n  componentDidMount() {\n    this.getMenuItems();\n    this.state.route === 'popular' ? this.getPopular() : console.log('get discover');\n  }\n\n  render() {\n    const route = this.state.route;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      changeRoute: this.changeRoute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"case\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      genres: this.state.genres,\n      getGenre: this.getGenre,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), route === 'popular' && React.createElement(Popular, {\n      podcasts: this.state.popular,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), route === 'discover' && React.createElement(Discover, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\PodcastApp\\podcastapp-SPA\\src\\App.js"],"names":["React","Component","Popular","Navigation","Discover","Menu","App","constructor","getPopular","fetch","then","response1","json","response2","setState","popular","getGenre","id","console","log","method","body","getMenuItems","response","genres","state","changeRoute","route","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Popular from './components/Popular/Popular';\nimport Navigation from './components/Navigation/Navigation';\nimport Discover from './components/Discover/Discover';\nimport Menu from './components/Menu/Menu';\n// idea to add state inside popular component to save/cache podcasts once they've been loaded there\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      popular: [],\n      route: 'discover',\n      genres: []\n    }\n  }\n\n  componentDidMount() {\n    this.getMenuItems();\n    this.state.route === 'popular' \n        ? this.getPopular() \n        : console.log('get discover');\n  }\n\n  getPopular = () => {\n    fetch('http://localhost:3000/popular')\n    .then(response1 => response1.json())\n    .then(response2 => this.setState({ popular: response2 }))\n  }\n\n  getGenre = (id) => {\n    //if using req.params.id doesn't work, send it in body\n    console.log('is it being passed', id);\n    fetch(`http://localhost:3000/genres/${id}`, {\n      method: 'post',\n      body: {\n        id: id\n      }\n    })\n    // .then(response => response.json())\n    // .then(response => {\n    //   console.log('genreresponse', response);\n    // })\n  }\n\n  getMenuItems = () => {\n    fetch('http://localhost:3000/genres')\n    .then(response => response.json())\n    .then(response => {\n      this.setState({ genres: response });\n      console.log('genres', this.state.genres);\n    })\n  }\n\n  changeRoute = (route) => {\n    if (route === 'popular') {\n      this.setState({ route: 'popular' });\n      this.getPopular();\n      console.log('wut', this.state.route);\n    } else if (route === 'discover') {\n        this.setState({ route: 'discover' });\n\n        console.log('discovery');\n      }\n    \n  }\n\n  render() {\n    const { route } = this.state;\n    return (\n      <div className=\"App\">\n        <Navigation changeRoute={this.changeRoute} />\n        <section className=\"section\">\n          <div className=\"case\">\n            <Menu genres={this.state.genres} getGenre={this.getGenre} />\n            {route === 'popular' && <Popular podcasts={this.state.popular} /> }\n            {route === 'discover' && <Discover /> }\n              \n          </div>\n        </section>\n        \n       \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}