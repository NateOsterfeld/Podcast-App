{"ast":null,"code":"var _jsxFileName = \"C:\\\\PodcastApp\\\\podcastapp-SPA\\\\src\\\\components\\\\Menu\\\\GenreList\\\\Genre\\\\Genre.js\";\nimport React from 'react';\nimport SubgenresList from './SubgenreList/SubgenreList';\nimport './Genre.css';\n\nconst Genre = ({\n  id,\n  name,\n  subgenres\n}) => {\n  const collapseList = event => {\n    let el = event.target.parentNode.nextElementSibling.nextElementSibling;\n\n    if (el.className === 'hidden') {\n      el.classList.remove('hidden');\n      event.target.classList.remove('fa-chevron-right');\n      event.target.classList.add('fa-sort-down');\n    } else {\n      el.classList.add('hidden');\n      event.target.classList.remove('fa-sort-down');\n      event.target.classList.add('fa-chevron-right');\n    }\n  };\n\n  const loadGenre = () => {\n    // load change route method from app.js and pass \"genre('id')\" then fetch genre podcasts into new component\n    console.log('load genre', id);\n  };\n\n  return React.createElement(\"li\", {\n    className: \"menu-list-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"menu-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, typeof subgenres != 'undefined' ? React.createElement(\"i\", {\n    onClick: e => collapseList(e),\n    className: \"fas fas fa-chevron-right grow dim chev\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : React.createElement(\"i\", {\n    className: \"fas fas fa-chevron-right clear-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"genre-name grow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    onClick: () => loadGenre(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, name)), React.createElement(\"ul\", {\n    className: \"hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, typeof subgenres != 'undefined' && React.createElement(SubgenresList, {\n    subgenres: subgenres,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n};\n\nexport default Genre;","map":{"version":3,"sources":["C:\\PodcastApp\\podcastapp-SPA\\src\\components\\Menu\\GenreList\\Genre\\Genre.js"],"names":["React","SubgenresList","Genre","id","name","subgenres","collapseList","event","el","target","parentNode","nextElementSibling","className","classList","remove","add","loadGenre","console","log","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,aAAP;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AACtC,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBC,kBAAxB,CAA2CA,kBAApD;;AACA,QAAIH,EAAE,CAACI,SAAH,KAAiB,QAArB,EAA+B;AAC3BJ,MAAAA,EAAE,CAACK,SAAH,CAAaC,MAAb,CAAoB,QAApB;AACAP,MAAAA,KAAK,CAACE,MAAN,CAAaI,SAAb,CAAuBC,MAAvB,CAA8B,kBAA9B;AACAP,MAAAA,KAAK,CAACE,MAAN,CAAaI,SAAb,CAAuBE,GAAvB,CAA2B,cAA3B;AACH,KAJD,MAIO;AACHP,MAAAA,EAAE,CAACK,SAAH,CAAaE,GAAb,CAAiB,QAAjB;AACAR,MAAAA,KAAK,CAACE,MAAN,CAAaI,SAAb,CAAuBC,MAAvB,CAA8B,cAA9B;AACAP,MAAAA,KAAK,CAACE,MAAN,CAAaI,SAAb,CAAuBE,GAAvB,CAA2B,kBAA3B;AACH;AACJ,GAXD;;AAYA,QAAMC,SAAS,GAAG,MAAM;AACpB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bf,EAA1B;AACH,GAHD;;AAMA,SACI;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,OAAOE,SAAP,IAAoB,WAApB,GACE;AAAG,IAAA,OAAO,EAAMc,CAAD,IAAOb,YAAY,CAACa,CAAD,CAAlC;AACG,IAAA,SAAS,EAAC,wCADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAIE;AAAG,IAAA,SAAS,EAAC,qCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANN,CADJ,EAUI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,OAAO,EAAK,MAAMH,SAAS,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,IADL,CADJ,CAVJ,EAeI;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,OAAOC,SAAP,IAAoB,WAApB,IACG,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEA,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHP,CAfJ,CADJ;AAwBH,CA3CD;;AA6CA,eAAeH,KAAf","sourcesContent":["import React from 'react';\r\nimport SubgenresList from './SubgenreList/SubgenreList';\r\nimport './Genre.css';\r\n\r\n\r\nconst Genre = ({ id, name, subgenres}) => {\r\n    const collapseList = (event) => {\r\n        let el = event.target.parentNode.nextElementSibling.nextElementSibling;\r\n        if (el.className === 'hidden') {\r\n            el.classList.remove('hidden');\r\n            event.target.classList.remove('fa-chevron-right');\r\n            event.target.classList.add('fa-sort-down');\r\n        } else {\r\n            el.classList.add('hidden');\r\n            event.target.classList.remove('fa-sort-down');\r\n            event.target.classList.add('fa-chevron-right');\r\n        }\r\n    }\r\n    const loadGenre = () => {\r\n        // load change route method from app.js and pass \"genre('id')\" then fetch genre podcasts into new component\r\n        console.log('load genre', id);\r\n    }\r\n\r\n\r\n    return (\r\n        <li className=\"menu-list-item\">\r\n            <span className=\"menu-icon\">\r\n            {\r\n                typeof subgenres != 'undefined'\r\n                ? <i onClick = { (e) => collapseList(e) }\r\n                     className=\"fas fas fa-chevron-right grow dim chev\">\r\n                  </i>\r\n                : <i className=\"fas fas fa-chevron-right clear-icon\"></i>\r\n            }\r\n            </span>\r\n            <div className=\"genre-name grow\">\r\n                <p onClick = { () => loadGenre() } >\r\n                    {name}\r\n                </p>  \r\n            </div>\r\n            <ul className=\"hidden\">\r\n            {\r\n                typeof subgenres != 'undefined' \r\n                && <SubgenresList subgenres={subgenres} /> \r\n            }\r\n            </ul>\r\n        </li>\r\n    )      \r\n}\r\n\r\nexport default Genre;\r\n"]},"metadata":{},"sourceType":"module"}